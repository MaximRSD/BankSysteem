#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankSystem
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Banksysteem")]
	public partial class BanksysteemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertrekeningen(rekeningen instance);
    partial void Updaterekeningen(rekeningen instance);
    partial void Deleterekeningen(rekeningen instance);
    partial void InsertKlanten(Klanten instance);
    partial void UpdateKlanten(Klanten instance);
    partial void DeleteKlanten(Klanten instance);
    partial void Inserttypen(typen instance);
    partial void Updatetypen(typen instance);
    partial void Deletetypen(typen instance);
    #endregion
		
		public BanksysteemDataContext() : 
				base(global::BankSystem.Properties.Settings.Default.BanksysteemConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BanksysteemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BanksysteemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BanksysteemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BanksysteemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<rekeningen> rekeningens
		{
			get
			{
				return this.GetTable<rekeningen>();
			}
		}
		
		public System.Data.Linq.Table<Klanten> Klantens
		{
			get
			{
				return this.GetTable<Klanten>();
			}
		}
		
		public System.Data.Linq.Table<typen> typens
		{
			get
			{
				return this.GetTable<typen>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.rekeningen")]
	public partial class rekeningen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nummer;
		
		private decimal _Saldo;
		
		private int _TypeID;
		
		private System.DateTime _OpenDatum;
		
		private System.Nullable<System.DateTime> _SluitDatum;
		
		private int _CustomerID;
		
		private EntityRef<Klanten> _Klanten;
		
		private EntityRef<typen> _typen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNummerChanging(string value);
    partial void OnNummerChanged();
    partial void OnSaldoChanging(decimal value);
    partial void OnSaldoChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnOpenDatumChanging(System.DateTime value);
    partial void OnOpenDatumChanged();
    partial void OnSluitDatumChanging(System.Nullable<System.DateTime> value);
    partial void OnSluitDatumChanged();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    #endregion
		
		public rekeningen()
		{
			this._Klanten = default(EntityRef<Klanten>);
			this._typen = default(EntityRef<typen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nummer", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nummer
		{
			get
			{
				return this._Nummer;
			}
			set
			{
				if ((this._Nummer != value))
				{
					this.OnNummerChanging(value);
					this.SendPropertyChanging();
					this._Nummer = value;
					this.SendPropertyChanged("Nummer");
					this.OnNummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Saldo", DbType="Decimal(18,2) NOT NULL")]
		public decimal Saldo
		{
			get
			{
				return this._Saldo;
			}
			set
			{
				if ((this._Saldo != value))
				{
					this.OnSaldoChanging(value);
					this.SendPropertyChanging();
					this._Saldo = value;
					this.SendPropertyChanged("Saldo");
					this.OnSaldoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._typen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenDatum", DbType="Date NOT NULL")]
		public System.DateTime OpenDatum
		{
			get
			{
				return this._OpenDatum;
			}
			set
			{
				if ((this._OpenDatum != value))
				{
					this.OnOpenDatumChanging(value);
					this.SendPropertyChanging();
					this._OpenDatum = value;
					this.SendPropertyChanged("OpenDatum");
					this.OnOpenDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SluitDatum", DbType="Date")]
		public System.Nullable<System.DateTime> SluitDatum
		{
			get
			{
				return this._SluitDatum;
			}
			set
			{
				if ((this._SluitDatum != value))
				{
					this.OnSluitDatumChanging(value);
					this.SendPropertyChanging();
					this._SluitDatum = value;
					this.SendPropertyChanged("SluitDatum");
					this.OnSluitDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="Int NOT NULL")]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Klanten.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klanten_rekeningen", Storage="_Klanten", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Klanten Klanten
		{
			get
			{
				return this._Klanten.Entity;
			}
			set
			{
				Klanten previousValue = this._Klanten.Entity;
				if (((previousValue != value) 
							|| (this._Klanten.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Klanten.Entity = null;
						previousValue.rekeningens.Remove(this);
					}
					this._Klanten.Entity = value;
					if ((value != null))
					{
						value.rekeningens.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(int);
					}
					this.SendPropertyChanged("Klanten");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="typen_rekeningen", Storage="_typen", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public typen typen
		{
			get
			{
				return this._typen.Entity;
			}
			set
			{
				typen previousValue = this._typen.Entity;
				if (((previousValue != value) 
							|| (this._typen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._typen.Entity = null;
						previousValue.rekeningens.Remove(this);
					}
					this._typen.Entity = value;
					if ((value != null))
					{
						value.rekeningens.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("typen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Klanten")]
	public partial class Klanten : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CustomerID;
		
		private string _BSN;
		
		private string _Voorletters;
		
		private string _Voornaam;
		
		private string _Adres;
		
		private string _Woonplaats;
		
		private string _Telefoonnummer;
		
		private string _Email;
		
		private string _Achternaam;
		
		private string _PostCode;
		
		private EntitySet<rekeningen> _rekeningens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerIDChanging(int value);
    partial void OnCustomerIDChanged();
    partial void OnBSNChanging(string value);
    partial void OnBSNChanged();
    partial void OnVoorlettersChanging(string value);
    partial void OnVoorlettersChanged();
    partial void OnVoornaamChanging(string value);
    partial void OnVoornaamChanged();
    partial void OnAdresChanging(string value);
    partial void OnAdresChanged();
    partial void OnWoonplaatsChanging(string value);
    partial void OnWoonplaatsChanged();
    partial void OnTelefoonnummerChanging(string value);
    partial void OnTelefoonnummerChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAchternaamChanging(string value);
    partial void OnAchternaamChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    #endregion
		
		public Klanten()
		{
			this._rekeningens = new EntitySet<rekeningen>(new Action<rekeningen>(this.attach_rekeningens), new Action<rekeningen>(this.detach_rekeningens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BSN", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string BSN
		{
			get
			{
				return this._BSN;
			}
			set
			{
				if ((this._BSN != value))
				{
					this.OnBSNChanging(value);
					this.SendPropertyChanging();
					this._BSN = value;
					this.SendPropertyChanged("BSN");
					this.OnBSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voorletters", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Voorletters
		{
			get
			{
				return this._Voorletters;
			}
			set
			{
				if ((this._Voorletters != value))
				{
					this.OnVoorlettersChanging(value);
					this.SendPropertyChanging();
					this._Voorletters = value;
					this.SendPropertyChanged("Voorletters");
					this.OnVoorlettersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Voornaam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Voornaam
		{
			get
			{
				return this._Voornaam;
			}
			set
			{
				if ((this._Voornaam != value))
				{
					this.OnVoornaamChanging(value);
					this.SendPropertyChanging();
					this._Voornaam = value;
					this.SendPropertyChanged("Voornaam");
					this.OnVoornaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adres", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Adres
		{
			get
			{
				return this._Adres;
			}
			set
			{
				if ((this._Adres != value))
				{
					this.OnAdresChanging(value);
					this.SendPropertyChanging();
					this._Adres = value;
					this.SendPropertyChanged("Adres");
					this.OnAdresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Woonplaats", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Woonplaats
		{
			get
			{
				return this._Woonplaats;
			}
			set
			{
				if ((this._Woonplaats != value))
				{
					this.OnWoonplaatsChanging(value);
					this.SendPropertyChanging();
					this._Woonplaats = value;
					this.SendPropertyChanged("Woonplaats");
					this.OnWoonplaatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefoonnummer", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Telefoonnummer
		{
			get
			{
				return this._Telefoonnummer;
			}
			set
			{
				if ((this._Telefoonnummer != value))
				{
					this.OnTelefoonnummerChanging(value);
					this.SendPropertyChanging();
					this._Telefoonnummer = value;
					this.SendPropertyChanged("Telefoonnummer");
					this.OnTelefoonnummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Achternaam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Achternaam
		{
			get
			{
				return this._Achternaam;
			}
			set
			{
				if ((this._Achternaam != value))
				{
					this.OnAchternaamChanging(value);
					this.SendPropertyChanging();
					this._Achternaam = value;
					this.SendPropertyChanged("Achternaam");
					this.OnAchternaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Klanten_rekeningen", Storage="_rekeningens", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<rekeningen> rekeningens
		{
			get
			{
				return this._rekeningens;
			}
			set
			{
				this._rekeningens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_rekeningens(rekeningen entity)
		{
			this.SendPropertyChanging();
			entity.Klanten = this;
		}
		
		private void detach_rekeningens(rekeningen entity)
		{
			this.SendPropertyChanging();
			entity.Klanten = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.typen")]
	public partial class typen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _Naam;
		
		private decimal _Rente;
		
		private decimal _MaxOpname;
		
		private System.Nullable<decimal> _Boete;
		
		private EntitySet<rekeningen> _rekeningens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnNaamChanging(string value);
    partial void OnNaamChanged();
    partial void OnRenteChanging(decimal value);
    partial void OnRenteChanged();
    partial void OnMaxOpnameChanging(decimal value);
    partial void OnMaxOpnameChanged();
    partial void OnBoeteChanging(System.Nullable<decimal> value);
    partial void OnBoeteChanged();
    #endregion
		
		public typen()
		{
			this._rekeningens = new EntitySet<rekeningen>(new Action<rekeningen>(this.attach_rekeningens), new Action<rekeningen>(this.detach_rekeningens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Naam
		{
			get
			{
				return this._Naam;
			}
			set
			{
				if ((this._Naam != value))
				{
					this.OnNaamChanging(value);
					this.SendPropertyChanging();
					this._Naam = value;
					this.SendPropertyChanged("Naam");
					this.OnNaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rente", DbType="Decimal(18,2) NOT NULL")]
		public decimal Rente
		{
			get
			{
				return this._Rente;
			}
			set
			{
				if ((this._Rente != value))
				{
					this.OnRenteChanging(value);
					this.SendPropertyChanging();
					this._Rente = value;
					this.SendPropertyChanged("Rente");
					this.OnRenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxOpname", DbType="Decimal(18,2) NOT NULL")]
		public decimal MaxOpname
		{
			get
			{
				return this._MaxOpname;
			}
			set
			{
				if ((this._MaxOpname != value))
				{
					this.OnMaxOpnameChanging(value);
					this.SendPropertyChanging();
					this._MaxOpname = value;
					this.SendPropertyChanged("MaxOpname");
					this.OnMaxOpnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Boete", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Boete
		{
			get
			{
				return this._Boete;
			}
			set
			{
				if ((this._Boete != value))
				{
					this.OnBoeteChanging(value);
					this.SendPropertyChanging();
					this._Boete = value;
					this.SendPropertyChanged("Boete");
					this.OnBoeteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="typen_rekeningen", Storage="_rekeningens", ThisKey="TypeID", OtherKey="TypeID")]
		public EntitySet<rekeningen> rekeningens
		{
			get
			{
				return this._rekeningens;
			}
			set
			{
				this._rekeningens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_rekeningens(rekeningen entity)
		{
			this.SendPropertyChanging();
			entity.typen = this;
		}
		
		private void detach_rekeningens(rekeningen entity)
		{
			this.SendPropertyChanging();
			entity.typen = null;
		}
	}
}
#pragma warning restore 1591
